dfm_object@docvars$document <- dfm_object@docvars$docname_
docvars_df <- quanteda::docvars(dfm_object) %>%
dplyr::select(document, everything()) %>%
dplyr::distinct(document, .keep_all = TRUE)
dfm_gamma_td <- gamma_td %>%
dplyr::left_join(docvars_df, by = "document") %>%
dplyr::left_join(dfm_td, by = "document", relationship = "many-to-many")
if (!"document" %in% names(dfm_gamma_td)) {
stop("'document' column is missing after joins.")
}
con_var_term_counts <- dfm_gamma_td %>%
tibble::as_tibble() %>%
dplyr::group_by(!!rlang::sym(continuous_variable)) %>%
dplyr::mutate(
total_count = sum(count),
term_proportion = count / total_count
) %>%
dplyr::ungroup()
con_var_term_counts_filtered <- con_var_term_counts %>%
dplyr::mutate(
across(where(is.numeric), ~ round(., 3)),
term = as.factor(term)) %>%
dplyr::filter(term %in% selected_terms)
con_var_term_gg <- con_var_term_counts_filtered %>%
ggplot2::ggplot(ggplot2::aes(
x = !!rlang::sym(continuous_variable),
y = term_proportion,
group = interaction(term, !!rlang::sym(continuous_variable)),
text = paste0("Term Proportion: ", sprintf("%.3f", term_proportion))
)) +
ggplot2::geom_point(color = "#636363", alpha = 0.6, size = 1) +
ggplot2::geom_smooth(color = "#337ab7",
se = TRUE,
method = "gam",
linewidth = 0.5,
formula = y ~ x) +
ggplot2::facet_wrap(~ term, scales = "free") +
ggplot2::scale_y_continuous(labels = scales::percent_format()) +
ggplot2::labs(x = "", y = "") +
ggplot2::theme_minimal(base_size = 11) +
ggplot2::theme(
legend.position = "none",
panel.grid.major = ggplot2::element_blank(),
panel.grid.minor = ggplot2::element_blank(),
axis.line = ggplot2::element_line(color = "#3B3B3B", linewidth = 0.3),
axis.ticks = ggplot2::element_line(color = "#3B3B3B", linewidth = 0.3),
strip.text.x = ggplot2::element_text(size = 11, color = "#3B3B3B"),
axis.text.x = ggplot2::element_text(size = 11, color = "#3B3B3B"),
axis.text.y = ggplot2::element_text(size = 11, color = "#3B3B3B"),
axis.title = ggplot2::element_text(size = 11, color = "#3B3B3B"),
axis.title.x = ggplot2::element_text(margin = ggplot2::margin(t = 9)),
axis.title.y = ggplot2::element_text(margin = ggplot2::margin(r = 9))
)
con_var_term_plotly <-plotly::ggplotly(
con_var_term_gg,
height = height,
width = width,
tooltip = "text"
) %>%
plotly::layout(
margin = list(l = 40, r = 150, t = 60, b = 40)
)
con_var_term_counts_filtered <- con_var_term_counts_filtered %>%
select(document, topic, gamma, term) %>%
mutate_if(is.numeric, round, digits = 3)
list(
plot = con_var_term_plotly,
table = DT::datatable(
con_var_term_counts_filtered,
options = list(
pageLength = 10,   # Number of rows per page
scrollX = TRUE,    # Horizontal scrolling
scrollY = "400px", # Vertical scrolling
width = "80%"      # Table width
)
) %>%
DT::formatStyle(
columns = colnames(gamma_terms_td),
`font-size` = "13px"
)
)
}
word_frequency_trends_results <-
word_frequency_trendss(
dfm_object,
stm_model = stm_15,
continuous_variable = "year",
selected_terms = c("calculator", "computer"),
height = 500,
width = 900)
word_frequency_trendss <- function(dfm_object,
stm_model,
continuous_variable,
selected_terms,
height = 500,
width = 900) {
dfm_td <- tidytext::tidy(dfm_object) %>%
tibble::as_tibble()
gamma_td <- tidytext::tidy(stm_model, matrix = "gamma", document_names = quanteda::docnames(dfm_object)) %>%
tibble::as_tibble()
if (any(is.na(gamma_td$document))) {
stop("Some document IDs in the STM model do not have corresponding names in dfm_object.")
}
dfm_object@docvars$document <- dfm_object@docvars$docname_
docvars_df <- quanteda::docvars(dfm_object) %>%
dplyr::select(document, everything()) %>%
dplyr::distinct(document, .keep_all = TRUE)
dfm_gamma_td <- gamma_td %>%
dplyr::left_join(docvars_df, by = "document") %>%
dplyr::left_join(dfm_td, by = "document", relationship = "many-to-many")
if (!"document" %in% names(dfm_gamma_td)) {
stop("'document' column is missing after joins.")
}
con_var_term_counts <- dfm_gamma_td %>%
tibble::as_tibble() %>%
dplyr::group_by(!!rlang::sym(continuous_variable)) %>%
dplyr::mutate(
total_count = sum(count),
term_proportion = count / total_count
) %>%
dplyr::ungroup()
con_var_term_counts_filtered <- con_var_term_counts %>%
dplyr::mutate(
across(where(is.numeric), ~ round(., 3)),
term = as.factor(term)) %>%
dplyr::filter(term %in% selected_terms)
con_var_term_gg <- con_var_term_counts_filtered %>%
ggplot2::ggplot(ggplot2::aes(
x = !!rlang::sym(continuous_variable),
y = term_proportion,
group = interaction(term, !!rlang::sym(continuous_variable)),
text = paste0("Term Proportion: ", sprintf("%.3f", term_proportion))
)) +
ggplot2::geom_point(color = "#636363", alpha = 0.6, size = 1) +
ggplot2::geom_smooth(color = "#337ab7",
se = TRUE,
method = "gam",
linewidth = 0.5,
formula = y ~ x) +
ggplot2::facet_wrap(~ term, scales = "free") +
ggplot2::scale_y_continuous(labels = scales::percent_format()) +
ggplot2::labs(x = "", y = "") +
ggplot2::theme_minimal(base_size = 11) +
ggplot2::theme(
legend.position = "none",
panel.grid.major = ggplot2::element_blank(),
panel.grid.minor = ggplot2::element_blank(),
axis.line = ggplot2::element_line(color = "#3B3B3B", linewidth = 0.3),
axis.ticks = ggplot2::element_line(color = "#3B3B3B", linewidth = 0.3),
strip.text.x = ggplot2::element_text(size = 11, color = "#3B3B3B"),
axis.text.x = ggplot2::element_text(size = 11, color = "#3B3B3B"),
axis.text.y = ggplot2::element_text(size = 11, color = "#3B3B3B"),
axis.title = ggplot2::element_text(size = 11, color = "#3B3B3B"),
axis.title.x = ggplot2::element_text(margin = ggplot2::margin(t = 9)),
axis.title.y = ggplot2::element_text(margin = ggplot2::margin(r = 9))
)
con_var_term_plotly <-plotly::ggplotly(
con_var_term_gg,
height = height,
width = width,
tooltip = "text"
) %>%
plotly::layout(
margin = list(l = 40, r = 150, t = 60, b = 40)
)
con_var_term_counts_filtered <- con_var_term_counts_filtered %>%
select(document, topic, gamma, term) %>%
mutate_if(is.numeric, round, digits = 3)
list(
plot = con_var_term_plotly,
table = DT::datatable(
con_var_term_counts_filtered,
options = list(
pageLength = 10,   # Number of rows per page
scrollX = TRUE,    # Horizontal scrolling
scrollY = "400px", # Vertical scrolling
width = "80%"      # Table width
)
) %>%
DT::formatStyle(
columns = colnames(con_var_term_counts_filtered),
`font-size` = "13px"
)
)
}
word_frequency_trends_results <-
word_frequency_trendss(
dfm_object,
stm_model = stm_15,
continuous_variable = "year",
selected_terms = c("calculator", "computer"),
height = 500,
width = 900)
word_frequency_trends_results$plot
word_frequency_trends_results$table
word_frequency_trendss <- function(dfm_object,
stm_model,
continuous_variable,
selected_terms,
height = 500,
width = 900) {
dfm_td <- tidytext::tidy(dfm_object) %>%
tibble::as_tibble()
gamma_td <- tidytext::tidy(stm_model, matrix = "gamma", document_names = quanteda::docnames(dfm_object)) %>%
tibble::as_tibble()
if (any(is.na(gamma_td$document))) {
stop("Some document IDs in the STM model do not have corresponding names in dfm_object.")
}
dfm_object@docvars$document <- dfm_object@docvars$docname_
docvars_df <- quanteda::docvars(dfm_object) %>%
dplyr::select(document, everything()) %>%
dplyr::distinct(document, .keep_all = TRUE)
dfm_gamma_td <- gamma_td %>%
dplyr::left_join(docvars_df, by = "document") %>%
dplyr::left_join(dfm_td, by = "document", relationship = "many-to-many")
if (!"document" %in% names(dfm_gamma_td)) {
stop("'document' column is missing after joins.")
}
con_var_term_counts <- dfm_gamma_td %>%
tibble::as_tibble() %>%
dplyr::group_by(!!rlang::sym(continuous_variable)) %>%
dplyr::mutate(
total_count = sum(count),
term_proportion = count / total_count
) %>%
dplyr::ungroup()
con_var_term_counts_filtered <- con_var_term_counts %>%
dplyr::mutate(
across(where(is.numeric), ~ round(., 3)),
term = as.factor(term)) %>%
dplyr::filter(term %in% selected_terms)
con_var_term_gg <- con_var_term_counts_filtered %>%
ggplot2::ggplot(ggplot2::aes(
x = !!rlang::sym(continuous_variable),
y = term_proportion,
group = interaction(term, !!rlang::sym(continuous_variable)),
text = paste0("Term Proportion: ", sprintf("%.3f", term_proportion))
)) +
ggplot2::geom_point(color = "#636363", alpha = 0.6, size = 1) +
ggplot2::geom_smooth(color = "#337ab7",
se = TRUE,
method = "gam",
linewidth = 0.5,
formula = y ~ x) +
ggplot2::facet_wrap(~ term, scales = "free") +
ggplot2::scale_y_continuous(labels = scales::percent_format()) +
ggplot2::labs(x = "", y = "") +
ggplot2::theme_minimal(base_size = 11) +
ggplot2::theme(
legend.position = "none",
panel.grid.major = ggplot2::element_blank(),
panel.grid.minor = ggplot2::element_blank(),
axis.line = ggplot2::element_line(color = "#3B3B3B", linewidth = 0.3),
axis.ticks = ggplot2::element_line(color = "#3B3B3B", linewidth = 0.3),
strip.text.x = ggplot2::element_text(size = 11, color = "#3B3B3B"),
axis.text.x = ggplot2::element_text(size = 11, color = "#3B3B3B"),
axis.text.y = ggplot2::element_text(size = 11, color = "#3B3B3B"),
axis.title = ggplot2::element_text(size = 11, color = "#3B3B3B"),
axis.title.x = ggplot2::element_text(margin = ggplot2::margin(t = 9)),
axis.title.y = ggplot2::element_text(margin = ggplot2::margin(r = 9))
)
con_var_term_plotly <-plotly::ggplotly(
con_var_term_gg,
height = height,
width = width,
tooltip = "text"
) %>%
plotly::layout(
margin = list(l = 40, r = 150, t = 60, b = 40)
)
con_var_term_counts_filtered <- con_var_term_counts_filtered %>%
select(document, topic, gamma, term) %>%
mutate_if(is.numeric, round, digits = 3)
list(
plot = con_var_term_plotly,
table = DT::datatable(
con_var_term_counts_filtered,
options = list(
pageLength = 10,   # Number of rows per page
scrollX = TRUE,    # Horizontal scrolling
scrollY = "400px", # Vertical scrolling
width = "80%"      # Table width
)
) %>%
DT::formatStyle(
columns = colnames(con_var_term_counts_filtered),
`font-size` = "15px"
)
)
}
word_frequency_trends_results <-
word_frequency_trendss(
dfm_object,
stm_model = stm_15,
continuous_variable = "year",
selected_terms = c("calculator", "computer"),
height = 500,
width = 900)
word_frequency_trends_results$plot
word_frequency_trends_results$table
word_frequency_trendss <- function(dfm_object,
stm_model,
continuous_variable,
selected_terms,
height = 500,
width = 900) {
dfm_td <- tidytext::tidy(dfm_object) %>%
tibble::as_tibble()
gamma_td <- tidytext::tidy(stm_model, matrix = "gamma", document_names = quanteda::docnames(dfm_object)) %>%
tibble::as_tibble()
if (any(is.na(gamma_td$document))) {
stop("Some document IDs in the STM model do not have corresponding names in dfm_object.")
}
dfm_object@docvars$document <- dfm_object@docvars$docname_
docvars_df <- quanteda::docvars(dfm_object) %>%
dplyr::select(document, everything()) %>%
dplyr::distinct(document, .keep_all = TRUE)
dfm_gamma_td <- gamma_td %>%
dplyr::left_join(docvars_df, by = "document") %>%
dplyr::left_join(dfm_td, by = "document", relationship = "many-to-many")
if (!"document" %in% names(dfm_gamma_td)) {
stop("'document' column is missing after joins.")
}
con_var_term_counts <- dfm_gamma_td %>%
tibble::as_tibble() %>%
dplyr::group_by(!!rlang::sym(continuous_variable)) %>%
dplyr::mutate(
total_count = sum(count),
term_proportion = count / total_count
) %>%
dplyr::ungroup()
con_var_term_counts_filtered <- con_var_term_counts %>%
dplyr::mutate(
across(where(is.numeric), ~ round(., 3)),
term = as.factor(term)) %>%
dplyr::filter(term %in% selected_terms)
con_var_term_gg <- con_var_term_counts_filtered %>%
ggplot2::ggplot(ggplot2::aes(
x = !!rlang::sym(continuous_variable),
y = term_proportion,
group = interaction(term, !!rlang::sym(continuous_variable)),
text = paste0("Term Proportion: ", sprintf("%.3f", term_proportion))
)) +
ggplot2::geom_point(color = "#636363", alpha = 0.6, size = 1) +
ggplot2::geom_smooth(color = "#337ab7",
se = TRUE,
method = "gam",
linewidth = 0.5,
formula = y ~ x) +
ggplot2::facet_wrap(~ term, scales = "free") +
ggplot2::scale_y_continuous(labels = scales::percent_format()) +
ggplot2::labs(x = "", y = "") +
ggplot2::theme_minimal(base_size = 11) +
ggplot2::theme(
legend.position = "none",
panel.grid.major = ggplot2::element_blank(),
panel.grid.minor = ggplot2::element_blank(),
axis.line = ggplot2::element_line(color = "#3B3B3B", linewidth = 0.3),
axis.ticks = ggplot2::element_line(color = "#3B3B3B", linewidth = 0.3),
strip.text.x = ggplot2::element_text(size = 11, color = "#3B3B3B"),
axis.text.x = ggplot2::element_text(size = 11, color = "#3B3B3B"),
axis.text.y = ggplot2::element_text(size = 11, color = "#3B3B3B"),
axis.title = ggplot2::element_text(size = 11, color = "#3B3B3B"),
axis.title.x = ggplot2::element_text(margin = ggplot2::margin(t = 9)),
axis.title.y = ggplot2::element_text(margin = ggplot2::margin(r = 9))
)
con_var_term_plotly <-plotly::ggplotly(
con_var_term_gg,
height = height,
width = width,
tooltip = "text"
) %>%
plotly::layout(
margin = list(l = 40, r = 150, t = 60, b = 40)
)
con_var_term_counts_filtered <- con_var_term_counts_filtered %>%
select(document, topic, gamma, term) %>%
mutate_if(is.numeric, round, digits = 3)
list(
plot = con_var_term_plotly,
table = DT::datatable(
con_var_term_counts_filtered,
options = list(
pageLength = 10,   # Number of rows per page
scrollX = TRUE,    # Horizontal scrolling
scrollY = "400px", # Vertical scrolling
width = "80%"      # Table width
)
) %>%
DT::formatStyle(
columns = colnames(con_var_term_counts_filtered),
`font-size` = "16px"
)
)
}
word_frequency_trends_results <-
word_frequency_trendss(
dfm_object,
stm_model = stm_15,
continuous_variable = "year",
selected_terms = c("calculator", "computer"),
height = 500,
width = 900)
word_frequency_trends_results$plot
word_frequency_trends_results$table
word_frequency_trendss <- function(dfm_object,
stm_model,
continuous_variable,
selected_terms,
height = 500,
width = 900) {
dfm_td <- tidytext::tidy(dfm_object) %>%
tibble::as_tibble()
gamma_td <- tidytext::tidy(stm_model, matrix = "gamma", document_names = quanteda::docnames(dfm_object)) %>%
tibble::as_tibble()
if (any(is.na(gamma_td$document))) {
stop("Some document IDs in the STM model do not have corresponding names in dfm_object.")
}
dfm_object@docvars$document <- dfm_object@docvars$docname_
docvars_df <- quanteda::docvars(dfm_object) %>%
dplyr::select(document, everything()) %>%
dplyr::distinct(document, .keep_all = TRUE)
dfm_gamma_td <- gamma_td %>%
dplyr::left_join(docvars_df, by = "document") %>%
dplyr::left_join(dfm_td, by = "document", relationship = "many-to-many")
if (!"document" %in% names(dfm_gamma_td)) {
stop("'document' column is missing after joins.")
}
con_var_term_counts <- dfm_gamma_td %>%
tibble::as_tibble() %>%
dplyr::group_by(!!rlang::sym(continuous_variable)) %>%
dplyr::mutate(
total_count = sum(count),
term_proportion = count / total_count
) %>%
dplyr::ungroup()
con_var_term_counts_filtered <- con_var_term_counts %>%
dplyr::mutate(
across(where(is.numeric), ~ round(., 3)),
term = as.factor(term)) %>%
dplyr::filter(term %in% selected_terms)
con_var_term_gg <- con_var_term_counts_filtered %>%
ggplot2::ggplot(ggplot2::aes(
x = !!rlang::sym(continuous_variable),
y = term_proportion,
group = interaction(term, !!rlang::sym(continuous_variable)),
text = paste0("Term Proportion: ", sprintf("%.3f", term_proportion))
)) +
ggplot2::geom_point(color = "#636363", alpha = 0.6, size = 1) +
ggplot2::geom_smooth(color = "#337ab7",
se = TRUE,
method = "gam",
linewidth = 0.5,
formula = y ~ x) +
ggplot2::facet_wrap(~ term, scales = "free") +
ggplot2::scale_y_continuous(labels = scales::percent_format()) +
ggplot2::labs(x = "", y = "") +
ggplot2::theme_minimal(base_size = 11) +
ggplot2::theme(
legend.position = "none",
panel.grid.major = ggplot2::element_blank(),
panel.grid.minor = ggplot2::element_blank(),
axis.line = ggplot2::element_line(color = "#3B3B3B", linewidth = 0.3),
axis.ticks = ggplot2::element_line(color = "#3B3B3B", linewidth = 0.3),
strip.text.x = ggplot2::element_text(size = 11, color = "#3B3B3B"),
axis.text.x = ggplot2::element_text(size = 11, color = "#3B3B3B"),
axis.text.y = ggplot2::element_text(size = 11, color = "#3B3B3B"),
axis.title = ggplot2::element_text(size = 11, color = "#3B3B3B"),
axis.title.x = ggplot2::element_text(margin = ggplot2::margin(t = 9)),
axis.title.y = ggplot2::element_text(margin = ggplot2::margin(r = 9))
)
con_var_term_plotly <-plotly::ggplotly(
con_var_term_gg,
height = height,
width = width,
tooltip = "text"
) %>%
plotly::layout(
margin = list(l = 40, r = 150, t = 60, b = 40)
)
con_var_term_counts_filtered <- con_var_term_counts_filtered %>%
select(document, topic, gamma, term) %>%
mutate_if(is.numeric, round, digits = 3)
list(
plot = con_var_term_plotly,
table = DT::datatable(
con_var_term_counts_filtered,
rownames = FALSE,
options = list(
pageLength = 10,   # Number of rows per page
scrollX = TRUE,    # Horizontal scrolling
scrollY = "400px", # Vertical scrolling
width = "80%"      # Table width
)
) %>%
DT::formatStyle(
columns = colnames(con_var_term_counts_filtered),
`font-size` = "16px"
)
)
}
word_frequency_trends_results <-
word_frequency_trendss(
dfm_object,
stm_model = stm_15,
continuous_variable = "year",
selected_terms = c("calculator", "computer"),
height = 500,
width = 900)
word_frequency_trends_results$plot
word_frequency_trends_results$table
library(TextAnalysisR)
