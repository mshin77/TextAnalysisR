% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/text_mining_functions.R
\name{plot_word_probabilities}
\alias{plot_word_probabilities}
\title{Plot Highest Word Probabilities for Each Topic}
\usage{
plot_word_probabilities(
  dfm_object,
  K_number,
  max.em.its = 75,
  categorical_var = NULL,
  continuous_var = NULL,
  top_n = 10,
  ncol = 3,
  topic_names = NULL,
  height = 2000,
  width = 1000,
  verbose = TRUE,
  ...
)
}
\arguments{
\item{dfm_object}{A quanteda document-feature matrix (dfm).}

\item{K_number}{The number of topics to display.}

\item{max.em.its}{Maximum number of EM iterations (default: 75).}

\item{categorical_var}{An optional character string for a categorical variable in the metadata.}

\item{continuous_var}{An optional character string for a continuous variable in the metadata.}

\item{top_n}{The number of top terms to display for each topic.}

\item{ncol}{The number of columns in the facet plot.}

\item{topic_names}{An optional character vector for labeling topics. If provided, must be the same length as the number of topics.}

\item{height}{The height of the resulting Plotly plot, in pixels. Defaults to \code{1000}.}

\item{width}{The width of the resulting Plotly plot, in pixels. Defaults to \code{1000}.}

\item{verbose}{Logical; if \code{TRUE}, prints progress information (default: TRUE).}

\item{...}{Further arguments passed to \code{stm::searchK}.}
}
\value{
A \code{Plotly} object showing a facet-wrapped chart of top terms for each topic,
ordered by their per-topic probability (beta). Each facet represents a topic.
}
\description{
This function provides a visualization of the top terms for each topic,
ordered by their word probability distribution for each topic (beta).
}
\details{
If \code{topic_names} is provided, it replaces the default "Topic \{n\}" labels with custom names.
}
\examples{
if (interactive()) {
df <- TextAnalysisR::SpecialEduTech
dfm_object <- df \%>\%
  TextAnalysisR::preprocess_texts(text_field = "abstract") \%>\%
  quanteda::dfm() \%>\%
  quanteda::dfm_trim(min_termfreq = 1, min_docfreq = 1) \%>\%
  .[quanteda::ntoken(.) > 0, ]
TextAnalysisR::plot_word_probabilities(
 dfm_object = dfm_object,
 K_number = 15,
 max.em.its = 75,
 categorical_var = "reference_type",
 continuous_var = "year",
 top_n = 10,
 ncol = 3,
 height = 2000,
 width = 1000,
 verbose = TRUE)
}

}
